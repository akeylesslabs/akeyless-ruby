=begin
#Akeyless API

#The purpose of this application is to provide access to Akeyless API.

The version of the OpenAPI document: 2.0
Contact: support@akeyless.io
Generated by: https://openapi-generator.tech
Generator version: 7.10.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for Akeyless::GatewayUpdateRemoteAccessDesktopApp
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe Akeyless::GatewayUpdateRemoteAccessDesktopApp do
  let(:instance) { Akeyless::GatewayUpdateRemoteAccessDesktopApp.new }

  describe 'test an instance of GatewayUpdateRemoteAccessDesktopApp' do
    it 'should create an instance of GatewayUpdateRemoteAccessDesktopApp' do
      # uncomment below to test the instance creation
      #expect(instance).to be_instance_of(Akeyless::GatewayUpdateRemoteAccessDesktopApp)
    end
  end

  describe 'test attribute "desktop_app_secure_web_access_url"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "desktop_app_secure_web_proxy"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "desktop_app_ssh_cert_issuer"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "json"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "token"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "uid_token"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
